{"version":3,"file":"static/js/766.64828f00.chunk.js","mappings":"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","sources":["webpack://react-app-01/./src/components/profile/MyPosts/post/Post.module.css?3ad8","components/profile/MyPosts/post/Post.jsx","webpack://react-app-01/./src/components/profile/MyPosts/MyPosts.module.css?21c2","components/profile/MyPosts/MyPosts.jsx","redux/selectors/profileSelector.js","components/profile/MyPosts/MyPostsContainer.jsx","webpack://react-app-01/./src/components/profile/profileInfo/ProfileInfo.module.css?df08","components/profile/profileInfo/profileStatus/ProfileStatus.jsx","components/profile/profileInfo/ProfileInfo.jsx","components/profile/Profile.jsx","redux/selectors/authSelector.js","components/profile/ProfileContainer.jsx","hoc/authRedirect.js","ui/validation/FormsControl.js","ui/validation/validators.js","webpack://react-app-01/./src/ui/validation/FormsControl.module.css?0a8f"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Post_wrap__Ibzh3\",\"item\":\"Post_item__fFNRM\",\"desc\":\"Post_desc__gB2qq\",\"name\":\"Post_name__l81hF\",\"img\":\"Post_img__43CX+\",\"post\":\"Post_post__RHlxe\"};","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nexport default function Post(props) {\r\n  \r\n  const {imgSrc, name, post, count} = props\r\n\r\n  return (\r\n    <div className={s.wrap}>\r\n        <div className={s.item}>\r\n          <img src={imgSrc} alt={name} className={s.img}/>\r\n          <div className={s.desc}>\r\n              <h3 className={s.name}>{name}</h3>\r\n              <p className={s.post}>{post}</p>\r\n          </div>\r\n        </div>\r\n        <span>Likes: {count ? count : 0}</span>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"MyPosts_wrap__L-nyq\",\"posts\":\"MyPosts_posts__0s0DB\",\"item\":\"MyPosts_item__I2auz\",\"btn\":\"MyPosts_btn__QB-49\"};","import React from 'react'\r\nimport Post from './post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator} from '../../../ui/validation/validators'\r\nimport { Textarea } from '../../../ui/validation/FormsControl'\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst PostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.item} >\r\n      <Field component={Textarea} name='newPost' validate={[maxLength50]} placeholder='New posts' />\r\n      <button className={s.btn}>Post</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({form: 'post'}) (PostForm)\r\n\r\nexport default function MyPosts(props) {\r\n  const onSubmit = (postData) => {\r\n    props.addNewPost(postData.newPost)\r\n  }\r\n  const posts = props.postsData.map((p, i) => <Post post={p.message} name={p.name} imgSrc={p.imgSrc} key={i}/>)\r\n\r\n  return (\r\n    <div className={s.wrap}>\r\n        <PostReduxForm onSubmit={onSubmit}/>\r\n        <div>\r\n            {posts}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","export const getUserPosts = (state) => {\r\n    return state.profilePage.postsData\r\n}\r\n\r\nexport const getUserProfileInfo = (state) => {\r\n    return state.profilePage.profileInfo\r\n}\r\n\r\nexport const getNewPostData = (state) => {\r\n    return state.profilePage.newPost\r\n}\r\n\r\nexport const getProfileId = (state) => {\r\n    return state.profilePage.id\r\n}\r\n\r\nexport const getProfileStatus = (state) => {\r\n    return state.profilePage.status\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.profilePage.isFetching\r\n}","import MyPosts from './MyPosts'\r\nimport {  addNewPost } from '../../../redux/reducers/profileReducer'\r\nimport { connect } from 'react-redux'\r\nimport { getNewPostData, getUserPosts } from '../../../redux/selectors/profileSelector'\r\n\r\n\r\nconst MapStateToProps = (state) => {\r\n  return {\r\n    postsData: getUserPosts(state),\r\n    newPost: getNewPostData(state),\r\n  }\r\n}\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(MapStateToProps, {\r\n  addNewPost,\r\n}) (MyPosts)\r\n\r\nexport default MyPostsContainer","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"ProfileInfo_wrap__H-adh\",\"profilePhoto\":\"ProfileInfo_profilePhoto__vkhD7\",\"profileInfo\":\"ProfileInfo_profileInfo__WUYL5\",\"profileName\":\"ProfileInfo_profileName__BHFeb\",\"status\":\"ProfileInfo_status__-Ghpx\",\"contacts\":\"ProfileInfo_contacts__VNlt6\"};","// eslint-disable-next-line\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nexport default function ProfileStatus({status, updateUserStatus}) {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [currentStatus, setCurrentStatus] = useState(status)\r\n\r\n    useEffect(()=> {\r\n        setCurrentStatus(status)\r\n    }, [status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        updateUserStatus(currentStatus)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setCurrentStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <span onDoubleClick={activateEditMode}>{status ? status : 'no status'}</span>\r\n                : <input onChange={onStatusChange} autoFocus onBlur={deactivateEditMode} defaultValue={currentStatus}/>\r\n                // : <StatusReduxForm onSubmit={onSubmit} defaultValue={status} onBlur={deactivateEditMode}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport defaultPhoto from \"../../../assets/image/userPhoto.png\"\r\nimport Preloader from '../../../ui/Preloader'\r\n\r\nimport style from './ProfileInfo.module.css'\r\nimport ProfileStatus from './profileStatus/ProfileStatus'\r\n\r\nexport default function ProfileInfo(props) {\r\n\r\n    const  {profileInfo, status, updateUserStatus, id, isFetching} = props\r\n    if (!profileInfo) {\r\n        \r\n        return <Preloader/>\r\n    }\r\n\r\n    const contacts = Object.entries(profileInfo.contacts).map(contact => {\r\n            return (\r\n            <a href={contact[1]}>{contact[0]}</a>\r\n            )\r\n        })\r\n    \r\n  return (\r\n    <div >\r\n        {isFetching ? <Preloader/> :\r\n            <div className={style.wrap}>\r\n                <img className={style.profilePhoto} src={profileInfo.photos.large != null ? profileInfo.photos.large : defaultPhoto} alt=\"profile\" />\r\n                <div className={style.profileInfo}>\r\n                    <h2 className={style.profileName}>{profileInfo.fullName}</h2>\r\n                    <ProfileStatus status={status} updateUserStatus={updateUserStatus} key={id}/>\r\n                    <div className={style.contacts}>\r\n                        {contacts}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n   \r\n  )\r\n}\r\n","import React from 'react'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './profileInfo/ProfileInfo'\r\n\r\n// import s from './Content.module.css'\r\n\r\nexport default function Profile(props) {\r\n  const {isFetching, profileInfo, status, updateUserStatus} = props\r\n  \r\n  return (\r\n    <div>\r\n      <ProfileInfo isFetching={isFetching} profileInfo={profileInfo} status={status} updateUserStatus={updateUserStatus}/>\r\n      <MyPostsContainer/>\r\n    </div>\r\n  )\r\n}\r\n","export const getAuthUserId = (state) => {\r\n    return state.auth.id\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Profile from \"./Profile\"\r\nimport { getPosts, getUserProfile, getUserStatus, updateUserStatus, resetUserProfile } from '../../redux/reducers/profileReducer'\r\nimport withRouter from '../../hooks/withRouter'\r\nimport { withAuthForComponentWrapper } from '../../hoc/authRedirect'\r\nimport { compose } from 'redux'\r\nimport { getIsFetching, getNewPostData, getProfileId, getProfileStatus, getUserPosts, getUserProfileInfo } from '../../redux/selectors/profileSelector'\r\nimport { getAuthUserId } from '../../redux/selectors/authSelector'\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n  const {router, authId, profileInfo, updateUserStatus, \r\n    status, getUserStatus, getUserProfile} = props\r\n\r\n  const getProfile = () => {\r\n    let userId = router.params.id\r\n    if (!userId) {\r\n      userId = authId\r\n    }\r\n    getUserProfile(userId)\r\n    getUserStatus(userId)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getProfile()\r\n  }, [router.params.id])\r\n\r\n  return (\r\n    <Profile {...props} profileInfo={profileInfo} updateUserStatus={updateUserStatus} status={status}/>\r\n  )\r\n}\r\n\r\nconst MapStateToProps = (state) => {\r\n  return {\r\n    postsData: getUserPosts(state),\r\n    newPost: getNewPostData(state),\r\n    id: getProfileId(state),\r\n    authId: getAuthUserId(state),\r\n    status: getProfileStatus(state),\r\n    profileInfo: getUserProfileInfo(state),\r\n    isFetching: getIsFetching(state),\r\n  }\r\n}\r\n\r\nexport default compose (\r\n  connect(MapStateToProps, {\r\n  getPosts,\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n  resetUserProfile}), \r\n  withRouter,\r\n  withAuthForComponentWrapper\r\n) (ProfileContainer)\r\n\r\n\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nexport const withAuthForComponentWrapper = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                if(this.props.router) {\r\n                    if (this.props.router.location.pathname !== '/profile') {\r\n                        return <Component {...this.props} />\r\n                    }\r\n                    return <Navigate to={'/login'}/>\r\n                }\r\n                return <Navigate to={'/login'}/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    const MapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth,\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(MapStateToProps) (RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}","import React from 'react'\r\nimport styles from './FormsControl.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\nconst Element = (Element) => ({input, meta, ...props}) => {\r\n    // const {input, meta, ...props} = props\r\n    const errorMessage = meta.error && meta.touched;\r\n\r\n    return (\r\n        <div className={errorMessage ? styles.error : styles.formControl}>\r\n            <Element {...input} {...meta} {...props}/>\r\n            {errorMessage && <span className={styles.errorMessage}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = Element('input') \r\nexport const Textarea = Element('textarea') \r\n\r\nexport const createField = (component, type, placeholder, name, validators, text='') => {\r\n    return ( \r\n        <div>\r\n            <Field component={component} type={type} placeholder={placeholder} name={name} validate={validators} />\r\n            <span>\r\n                {text}\r\n            </span>\r\n        </div>\r\n    )\r\n}","export const required = ( value) => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (length) => (value) => {\r\n    if (value && value.length > length) return `Max length ${length} symbols`;\r\n    return undefined\r\n}\r\nexport const minLengthCreator = (length) => (value) => {\r\n    if (value && value.length < length) return `Min length ${length} symbols`;\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControl_formControl__EYfDy\",\"error\":\"FormsControl_error__dhOV-\",\"errorMessage\":\"FormsControl_errorMessage__CvuuO\"};"],"names":["Post","props","imgSrc","name","post","count","_jsxs","className","s","wrap","children","item","_jsx","src","alt","img","desc","maxLength50","maxLengthCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","placeholder","getUserPosts","state","profilePage","postsData","getUserProfileInfo","profileInfo","getNewPostData","newPost","getProfileId","id","getProfileStatus","status","getIsFetching","isFetching","connect","addNewPost","posts","map","p","i","message","postData","ProfileStatus","_ref","updateUserStatus","editMode","setEditMode","useState","currentStatus","setCurrentStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","defaultValue","onDoubleClick","activateEditMode","ProfileInfo","Preloader","contacts","Object","entries","contact","href","style","profilePhoto","photos","large","defaultPhoto","profileName","fullName","Profile","MyPostsContainer","getAuthUserId","auth","compose","authId","getPosts","getUserProfile","getUserStatus","resetUserProfile","withRouter","withAuthForComponentWrapper","router","getProfile","userId","params","Component","RedirectComponent","React","render","this","isAuth","location","pathname","Navigate","to","Element","input","meta","errorMessage","error","touched","styles","formControl","Input","createField","type","validators","text","arguments","length","undefined","required","concat","minLengthCreator"],"sourceRoot":""}