{"version":3,"file":"static/js/916.813ea690.chunk.js","mappings":"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","sources":["webpack://react-app-01/./src/components/dialogs/user/User.module.css?50af","components/dialogs/user/User.jsx","webpack://react-app-01/./src/components/dialogs/message/Message.module.css?db72","components/dialogs/message/Message.jsx","webpack://react-app-01/./src/components/dialogs/Dialogs.module.css?04a9","components/dialogs/Dialogs.jsx","components/dialogs/DialogsContainer.jsx","hoc/authRedirect.js","ui/validation/FormsControl.js","webpack://react-app-01/./src/ui/validation/FormsControl.module.css?0a8f"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"name\":\"User_name__C8TeI\",\"active\":\"User_active__GBqM7\"};","import React from 'react'\r\nimport s from './User.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default function User({name, id}) {\r\n  const activeLink = ({ isActive }) => isActive ? `${s.name} ${s.active}` : s.name\r\n  \r\n\r\n  return (\r\n    <NavLink to={`/dialogs/${id}`} className={activeLink}>{name ? name : 'No name'}</NavLink>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Message_wrap__pR4BR\",\"wrapRight\":\"Message_wrapRight__zq8Qp\",\"message\":\"Message_message__qtlqs\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\nexport default function Message(props) {\r\n\r\n  const incomingMessage = (\r\n    <div className={s.wrap}>\r\n      <div>\r\n        <img src=\"https://animego.org/media/cache/thumbs_60x60/upload/avatar/652797ce3668d760496455.jpeg\" alt={`${props.name} avatar`} />\r\n        <h3>{props.name}</h3>\r\n      </div>\r\n      <p className={s.message}>{props.message? props.message : 'hello'}</p>\r\n    </div>\r\n  )\r\n\r\n  const myMessage = (\r\n    <div className={s.wrapRight}>\r\n    <p className={s.message}>{props.message? props.message : 'hello'}</p>\r\n    <div>\r\n      <img src=\"https://animego.org/media/cache/thumbs_60x60/upload/avatar/652797ce3668d760496455.jpeg\" alt={`${props.name} avatar`} />\r\n      <h3>{props.name}</h3>\r\n    </div>\r\n  </div>\r\n  )\r\n\r\n  return props.income ? incomingMessage : myMessage\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Dialogs_wrap__oWl8e\",\"dialogs\":\"Dialogs_dialogs__8KynN\",\"dialogItems\":\"Dialogs_dialogItems__pVgjF\",\"messages\":\"Dialogs_messages__lQ9dX\",\"messagesArea\":\"Dialogs_messagesArea__8ZLTS\",\"newMessage\":\"Dialogs_newMessage__Oz5NY\"};","import React from 'react'\r\nimport User from './user/User'\r\nimport Message from './message/Message'\r\nimport s from './Dialogs.module.css'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../../ui/validation/FormsControl'\r\n\r\nconst DialogForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.newMessage}>\r\n      <Field component={Textarea} placeholder='Enter your message...' name=\"newMessage\" />\r\n      <button>Send</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst DialogReduxForm = reduxForm({form: 'dialogs'}) (DialogForm)\r\n\r\nexport default function Dialogs(props) {\r\n  // const newMessageElement = React.createRef();\r\n  \r\n  const users = props.usersData.map((user, i)=> <User name={user.name} id={i+1} key={user.id}/>)\r\n  const messages = props.messagesData.map((m, i)=> <Message message={m.message} name={m.name} income={m.income} key={i}/>)\r\n  \r\n  const onSubmit = (value) => {\r\n    props.sendNewMessage(value.newMessage)\r\n  }\r\n\r\n  return (\r\n    <div className={s.wrap}>\r\n        <div className={s.dialogs}>\r\n          <div className={s.dialogItems}>\r\n            {users}\r\n          </div>\r\n        </div>\r\n        <div className={s.messages}>\r\n          <div className={s.messagesArea}>\r\n            {messages}\r\n          </div>\r\n            <DialogReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import Dialogs from './Dialogs';\r\nimport { sendNewMessage } from '../../redux/reducers/dialogsReducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthForComponentWrapper } from '../../hoc/authRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    usersData: state.dialogsPage.usersData,\r\n    messagesData: state.dialogsPage.messagesData,\r\n  }\r\n}\r\n\r\nexport default compose (\r\n  connect(mapStateToProps, {sendNewMessage}),\r\n  withAuthForComponentWrapper\r\n) (Dialogs)","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nexport const withAuthForComponentWrapper = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                if(this.props.router) {\r\n                    if (this.props.router.location.pathname !== '/profile') {\r\n                        return <Component {...this.props} />\r\n                    }\r\n                    return <Navigate to={'/login'}/>\r\n                }\r\n                return <Navigate to={'/login'}/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    const MapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth,\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(MapStateToProps) (RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}","import React from 'react'\r\nimport styles from './FormsControl.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\nconst Element = (Element) => ({input, meta, ...props}) => {\r\n    // const {input, meta, ...props} = props\r\n    const errorMessage = meta.error && meta.touched;\r\n\r\n    return (\r\n        <div className={errorMessage ? styles.error : styles.formControl}>\r\n            <Element {...input} {...meta} {...props}/>\r\n            {errorMessage && <span className={styles.errorMessage}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = Element('input') \r\nexport const Textarea = Element('textarea') \r\n\r\nexport const createField = (component, type, placeholder, name, validators, text='') => {\r\n    return ( \r\n        <div>\r\n            <Field component={component} type={type} placeholder={placeholder} name={name} validate={validators} />\r\n            <span>\r\n                {text}\r\n            </span>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControl_formControl__EYfDy\",\"error\":\"FormsControl_error__dhOV-\",\"errorMessage\":\"FormsControl_errorMessage__CvuuO\"};"],"names":["User","_ref","name","id","_jsx","NavLink","to","concat","className","_ref2","isActive","s","active","children","Message","props","incomingMessage","_jsxs","wrap","src","alt","message","myMessage","wrapRight","income","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","compose","connect","state","usersData","dialogsPage","messagesData","sendNewMessage","withAuthForComponentWrapper","users","map","user","i","messages","m","value","newMessage","Component","RedirectComponent","React","render","this","isAuth","router","location","pathname","Navigate","auth","Element","input","meta","errorMessage","error","touched","styles","formControl","Input","createField","type","validators","text","arguments","length","undefined","validate"],"sourceRoot":""}